@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 240 10% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;
    --primary: 240 5.9% 10%;
    --primary-foreground: 0 0% 98%;
    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;
    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 3.8% 46.1%;
    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 5.9% 90%;
    --input: 240 5.9% 90%;
    --ring: 240 5.9% 10%;
    --radius: 8px;

    /* User Theme Variables */
    --user-theme-background: initial;
    --user-theme-font: initial;
    --user-theme-font-color: initial;
    --user-theme-headings-font: initial;
    --user-theme-headings-font-color: initial;
  }

  .dark {
    --background: 0deg, 0%, 9%;
    --foreground: 0 0% 98%;
    --card: 0deg, 0%, 15%;
    --card-foreground: 220, 14%, 96%;
    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 240 5.9% 10%;
    --secondary: 240 3.7% 15.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;
    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 23%;
    --ring: 240 4.9% 83.9%;
  }

  /* User Theme Classes */
  .user-theme-background {
    background: var(--user-theme-background);
  }

  .user-theme-font {
    font-family: var(--user-theme-font);
  }

  html {
    -webkit-font-smoothing: antialiased;
  }
  ::-webkit-scrollbar {
    display: none;
  }

  /* Hide scrollbar for Firefox */
  * {
    scrollbar-width: none;
  }
}

/*  
@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
} */

.grabbable {
  cursor: move; /* fallback if grab cursor is unsupported */
  cursor: grab;
  cursor: -moz-grab;
  cursor: -webkit-grab;
}

/* (Optional) Apply a "closed-hand" cursor during drag operation. */
.grabbable:active {
  cursor: grabbing;
  cursor: -moz-grabbing;
  cursor: -webkit-grabbing;
}

.grid-container {
  display: grid;
  grid-template-columns: 1fr;
}

.grid-overlap {
  grid-row-start: 1;
  grid-column-start: 1;
}

.react-grid-layout {
  position: relative;
  width: 100%;
  height: 100%;
}
.react-grid-item {
  border-color: lightgray;
  transition: all 200ms ease;
  transition-property: left, top, width, height;
}
.react-grid-item img {
  pointer-events: none;
  user-select: none;
}
.react-grid-item.cssTransforms {
  transition-property: transform, width, height;
}
.react-grid-item.resizing {
  transition: none;
  z-index: 1;
  will-change: width, height;
}

.react-grid-item.react-draggable-dragging {
  transition: none;
  z-index: 3;
  will-change: transform;
}

.react-grid-item.dropping {
  visibility: hidden;
}

.react-grid-item.react-grid-placeholder {
  border-radius: 10px;
  padding: 4px;
  background: blue 20% 20%;
  opacity: 0.1;
  transition-duration: 200ms;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -o-user-select: none;
  user-select: none;
  pointer-events: none; /* Fixes event handlers not being called on inner components */
}

.react-grid-item.react-grid-placeholder.placeholder-resizing {
  transition: none;
}

.react-grid-item > .react-resizable-handle {
  position: absolute;
  width: 36px;
  height: 36px;
  z-index: 10;
}

.react-grid-item > .react-resizable-handle::after {
  content: "";
  position: absolute;
  right: 3px;
  bottom: 3px;
  width: 5px;
  height: 5px;
  border-right: 2px solid rgba(0, 0, 0, 0.1);
  border-bottom: 2px solid rgba(0, 0, 0, 0.1);
}

.react-resizable-hide > .react-resizable-handle {
  display: none;
}

.react-grid-item > .react-resizable-handle.react-resizable-handle-sw {
  bottom: 0;
  left: 0;
  cursor: sw-resize;
  transform: rotate(90deg);
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-se {
  bottom: 0;
  right: 0;
  cursor: se-resize;
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-nw {
  top: 0;
  left: 0;
  cursor: nw-resize;
  transform: rotate(180deg);
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-ne {
  top: 0;
  right: 0;
  cursor: ne-resize;
  transform: rotate(270deg);
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-w,
.react-grid-item > .react-resizable-handle.react-resizable-handle-e {
  top: 50%;
  margin-top: -10px;
  cursor: ew-resize;
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-w {
  left: 0;
  top: 10px;
  height: 100%;
  width: 5%;
  opacity: 0;
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-e {
  right: 0;
  top: 10px;
  height: 100%;
  width: 5%;
  opacity: 0;
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-n,
.react-grid-item > .react-resizable-handle.react-resizable-handle-s {
  left: 50%;
  margin-left: -10px;
  cursor: ns-resize;
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-n {
  top: 0;
  left: 10px;
  height: 5%;
  width: 100%;
  opacity: 0;
}
.react-grid-item > .react-resizable-handle.react-resizable-handle-s {
  bottom: 0;
  left: 10px;
  height: 5%;
  width: 100%;
  opacity: 0;
}

.react-tweet-theme {
  --tweet-container-margin: 0px !important;
}

/* Color picker. Because the `disableDarkMode` prop does not work currently */
@media (prefers-color-scheme: dark) {
  div[class*="core_rbgcpControlBtnWrapper"] {
    background: #f0f0f0;
  }

  div[class*="core_rbgcpControlBtn"] {
    color: #777;
  }

  div[class*="core_rbgcpControlBtnSelected"] {
    color: rgb(59 130 246);
    background: #fff;
  }

  path[class*="core_rbgcpControlIcon"],
  polygon[class*="core_rbgcpControlIcon"],
  line[class*="core_rbgcpControlIcon"],
  polyline[class*="core_rbgcpControlIcon"] {
    stroke: #777;
  }

  path[class*="core_rbgcpControlIcon2"],
  polygon[class*="core_rbgcpControlIcon2"],
  line[class*="core_rbgcpControlIcon2"],
  polyline[class*="core_rbgcpControlIcon2"] {
    fill: #777;
  }

  div[class*="core_rbgcpColorModelDropdown"] {
    background: #f0f0f0;
  }

  input[class*="core_rbgcpInput"] {
    background: #fff;
    border: 1px solid #ccc;
    color: #666;
    font-size: 75%;
  }
}
